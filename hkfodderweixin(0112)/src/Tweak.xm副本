
#import "substrate.h"
#import "hkweixin.h"

static NSMutableArray *nearbyCContactList = [[NSMutableArray alloc] init];
id app = NULL;

static AddressBookFriendViewController *abfvc = [[NSClassFromString(@"AddressBookFriendViewController") alloc] init];

%hook CAppViewControllerManager
- (void)enterForeground {
    %orig;
//    MMTabBarController *tab = MSHookIvar<MMTabBarController *>(self, "m_tabbarController");
//    tab.selectedIndex = 2;
    app = self;
    NSLog(@"HKWECHAT get app: %@", app);
}

%end


%hook ContactsViewController

/*- (void)didAppear {
    
    %orig;
    
    NSLog(@"-----------ContactsViewController:didAppear---------- start -------------");
    if ([nearbyCContactList count]) {
        [nearbyCContactList enumerateObjectsUsingBlock:^(CContact *info, NSUInteger idx, BOOL *stop) {

//            [NSThread sleepForTimeInterval:1];
            
            NSLog(@"HKWECHAT before add info -- : %@", abfvc);
            [abfvc verifyContactWithOpCode:info opcode:1];
//            [manager refreshContactLocalData];
            NSLog(@"HKWECHAT now add info: res: %@", info);
        }];
        [nearbyCContactList release];
        nearbyCContactList = [[NSMutableArray alloc] init];
    }
    NSLog(@"-----------ContactsViewController:didAppear---------- end -------------");
}
*/
- (void)didAppear {
    UIWindow *window = [UIApplication sharedApplication].keyWindow;
    UILabel *lable = [[UILabel alloc] initWithFrame:CGRectMake(100, 2, 120, 30)];
    NSString *text = @"";//[NSString stringWithFormat:@"0/%d",[nearbyCContactList count]];
    [lable setText:text];
    lable.textColor = [UIColor redColor];
    [window addSubview:lable];
    [window bringSubviewToFront:lable];
    
    NSLog(@"HKWECHAT createLable----");
    
    if ([nearbyCContactList count]) {
        dispatch_queue_t  queue= dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
        dispatch_sync(queue, ^{
            [nearbyCContactList enumerateObjectsUsingBlock:^(CContact *info, NSUInteger idx, BOOL *stop) {
                NSLog(@"HKWECHAT before add info -- : %@", abfvc);
                
                [abfvc verifyContactWithOpCode:info opcode:1];
                
                //            [manager refreshContactLocalData];
                NSLog(@"HKWECHAT now add info: res: %@", info);
                
                NSString *text = [NSString stringWithFormat:@"%d/%d",idx+1,[nearbyCContactList count]];
                [lable setText:@""];
                [lable setText:text];
                
                [NSThread sleepForTimeInterval:0.2f];
                
            }];
            [nearbyCContactList release];
            nearbyCContactList = [[NSMutableArray alloc] init];
        });
    }
}

%end // end hook

%hook FindFriendEntryViewController

-(BOOL)viewDidAppear:(BOOL)arg1 {
    BOOL res = %orig;
    NSLog(@"HKWECHAT will op LBS");
//    [self openLBS];
    return res;
}

%end // end hook




%hook CContactVerifyLogic

- (void)startWithVerifyContactWrap:(id)arg1 opCode:(unsigned long)arg2 parentView:(id)arg3 fromChatRoom:(BOOL)arg4 {
    %orig;
    NSLog(@"HKWECHAT startWithVerifyContactWrap: %@, %lu, %@, %@", arg1, arg2, arg3, arg4 ? @"YES" : @"NO");
}

- (void)onSendContactVerify:(id)arg1 {
    %orig;
    NSLog(@"HKWECHAT onSendContactVerify: %@", arg1);
}

- (BOOL)doVerify:(id)arg1 {
    BOOL res = %orig;
    NSLog(@"HKWECHAT doVerify: %@", arg1);
    return res;
}

%end // end hook



%hook SeePeopleNearbyViewController

- (void)stopLoading {
    %orig;
//    NSLog(@"HKWECHAT retrieveLocationOK: %@", [[self logicController] m_lbsContactList]);
    NSLog(@"HKWECHAT now in lbs");
    [[[[self logicController] m_lbsContactList] lbsContactList] enumerateObjectsUsingBlock:^(MMLbsContactInfo *info, NSUInteger idx, BOOL *stop) {
        if (![info isInMyContactList]) {
            CContact *contact = [[NSClassFromString(@"CContact") alloc] init];
            contact.m_nsUsrName = info.userName;
            contact.m_nsNickName = info.nickName;
            contact.m_nsAliasName = info.m_nsAlias;
            contact.m_nsSignature = info.signature;
            contact.m_uiSex = info.sex;
            contact.m_nsCertificationInfo = info.CertificationInfo;
            contact.m_uiCertificationFlag = info.CertificationFlag;
            contact.m_nsCity = info.city;
            contact.m_nsProvince = info.province;
            contact.m_nsCountry = info.country;
            [nearbyCContactList addObject:contact];
//            NSLog(@"HKWECHAT contact: %@", contact);
//            *stop = YES;
        }
    }];
//    MMTabBarController *tab = MSHookIvar<MMTabBarController *>(app, "m_tabbarController");
//    tab.selectedIndex = 1;
    
    
}


%end




