//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "MLPublisher.h"

#import "FFRtmpWriterDelegate.h"
#import "MLAudioUnitDelegate.h"

@class IJKAudioConvert, MLSimpleMusicDecoder, NSMutableArray, NSString;

@interface MLStreamPublisher : MLPublisher <FFRtmpWriterDelegate, MLAudioUnitDelegate>
{
    _Bool _isLoopbackAudio;
    unsigned long long _sessionTime;
    unsigned long long _totalBytesSendOut;
    MLSimpleMusicDecoder *_smDecoder;
    NSMutableArray *_audioMusicPlaybackSampleBuffer;
    NSMutableArray *_audioMusicSendoutSampleBuffer;
    unsigned long long _maxPcmDataSampleBufSize;
    long long _musicStartTsInMs;
    unsigned long long _retryAudioRenderTimes;
    long long _writeOutVideoFramesNumber;
    IJKAudioConvert *_audioConvert;
    CDStruct_1b6d18a9 _lastAudioPts;
}

@property(retain, nonatomic) IJKAudioConvert *audioConvert; // @synthesize audioConvert=_audioConvert;
@property(nonatomic) long long writeOutVideoFramesNumber; // @synthesize writeOutVideoFramesNumber=_writeOutVideoFramesNumber;
@property(nonatomic) unsigned long long retryAudioRenderTimes; // @synthesize retryAudioRenderTimes=_retryAudioRenderTimes;
@property(nonatomic) CDStruct_1b6d18a9 lastAudioPts; // @synthesize lastAudioPts=_lastAudioPts;
@property(nonatomic) long long musicStartTsInMs; // @synthesize musicStartTsInMs=_musicStartTsInMs;
@property(nonatomic) unsigned long long maxPcmDataSampleBufSize; // @synthesize maxPcmDataSampleBufSize=_maxPcmDataSampleBufSize;
@property(retain, nonatomic) NSMutableArray *audioMusicSendoutSampleBuffer; // @synthesize audioMusicSendoutSampleBuffer=_audioMusicSendoutSampleBuffer;
@property(retain, nonatomic) NSMutableArray *audioMusicPlaybackSampleBuffer; // @synthesize audioMusicPlaybackSampleBuffer=_audioMusicPlaybackSampleBuffer;
@property(retain, nonatomic) MLSimpleMusicDecoder *smDecoder; // @synthesize smDecoder=_smDecoder;
@property unsigned long long totalBytesSendOut; // @synthesize totalBytesSendOut=_totalBytesSendOut;
@property(nonatomic) unsigned long long sessionTime; // @synthesize sessionTime=_sessionTime;
- (_Bool)isLoopbackAudio;
- (void).cxx_destruct;
- (void)playbackAudioSampleData:(char *)arg1 byteSize:(unsigned int)arg2;
- (void)pushMusicSampleBuffer:(id)arg1 data:(id)arg2;
- (void)gernerateMusicSampleData;
- (void)onAudioUnitRenderDataError:(int)arg1 instance:(void *)arg2;
- (void)onDeliverRecorderData:(unsigned int)arg1 ioData:(struct AudioBufferList *)arg2;
- (void)destroyAudioUnitController;
- (void)createAudioUnitControllerWithSubType:(unsigned int)arg1;
- (double)musicCurrentPosition;
- (void)musicPlaybackEnded;
- (void)stopMusic;
- (void)createMusicPlayerWithUrl:(id)arg1;
- (void)audioEncoderWithSample:(id)arg1 pts:(CDStruct_1b6d18a9)arg2;
- (void)processAudioBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (double)sessionSampleRate;
- (void)mixAudioSampleInPlace:(id)arg1 slaverSamples:(id)arg2;
- (void)writeFailedWithError:(id)arg1;
- (unsigned long long)getEncodedVideoBufferDurationInMs;
- (void)sendStartLogInfo;
- (void)encoder:(id)arg1 encodedFrame:(id)arg2;
- (void)adjustBitrate;
- (void)setupRtmpWriter;
- (void)createAudioEncoder;
- (void)setupEncoders;
- (_Bool)isDropFrame;
- (id)publisherType;
- (void)setIsLoopbackAudio:(_Bool)arg1;
- (void)startPublishingWithPublishPath:(id)arg1 videoBitrate:(unsigned long long)arg2 videoFramerate:(unsigned long long)arg3 audioBitrate:(unsigned long long)arg4 audioSamplerate:(unsigned long long)arg5 statisticReportCount:(long long)arg6 statisticSec:(long long)arg7 logEventEnable:(long long)arg8 userID:(id)arg9 roomID:(id)arg10 provider:(int)arg11 sessionTime:(unsigned long long)arg12 codecType:(long long)arg13 bitrateAdapter:(long long)arg14 adaptiveCachMax:(long long)arg15 adaptiveCachMin:(long long)arg16 confServer:(id)arg17 confSecurityId:(id)arg18 confSessionId:(id)arg19 confUserId:(id)arg20 maxBufferStartTimestampInMs:(unsigned long long)arg21;
- (void)startPublishingWithOptions:(id)arg1;
- (id)seiStrToSeiData:(id)arg1;
- (id)gernerateSeiStr:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

