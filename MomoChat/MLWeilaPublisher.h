//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "MLPublisher.h"

#import "EnterConfApiDelegate.h"
#import "ExternalAudioModuleDelegate.h"
#import "ExternalVideoModuleDelegate.h"
#import "MLAudioUnitDelegate.h"
#import "MLPublisherRenderViewsLayoutDelegate.h"
#import "MLPublisherStatisticAuxiliaryDataProvider.h"
#import "SimpleVideoPlayerDelegate.h"

@class EnterConfApi, ExternalAudioModule, ExternalVideoModule, MLPublisherRenderViewsLayout, MLSimpleMusicDecoder, NSMutableArray, NSMutableDictionary, NSString, UIView;

@interface MLWeilaPublisher : MLPublisher <MLPublisherStatisticAuxiliaryDataProvider, ExternalVideoModuleDelegate, ExternalAudioModuleDelegate, EnterConfApiDelegate, MLAudioUnitDelegate, SimpleVideoPlayerDelegate, MLPublisherRenderViewsLayoutDelegate>
{
    _Bool _isHost;
    long long _conferenceSessionId;
    _Bool _isPlaybackRemoteAudio;
    long long _musicStartTsInMs;
    double _lastAudioPts;
    _Bool _isBeginAdjustBitrate;
    _Bool _isLocalFullScreen;
    int _mixPosX;
    int _mixPosY;
    int _mixWidth;
    int _mixHeight;
    unsigned long long _totalAudioSendOutBytes;
    unsigned long long _totalVideoSendOutBytes;
    unsigned long long _totalSendOutBytes;
    NSMutableArray *_audioMusicPlaybackSampleBuffer;
    NSMutableArray *_audioMusicSendoutSampleBuffer;
    unsigned long long _maxPcmDataSampleBufSize;
    EnterConfApi *_confInstance;
    ExternalVideoModule *_videoModuleInstance;
    ExternalAudioModule *_audioModuleInstance;
    NSMutableDictionary *_smVideoPlayerDict;
    NSString *_conferenceServer;
    NSString *_securityId;
    unsigned long long _remoteUserId;
    unsigned long long _localUserId;
    NSString *_acceptRemoteUserId;
    NSString *_hostSdkID;
    long long _readyToAcceptRemoteUserId;
    NSString *_momoId;
    unsigned long long _connectedTimestampInMs;
    unsigned long long _retryAudioRenderTimes;
    unsigned long long _lastAudioTimestamp;
    MLSimpleMusicDecoder *_smDecoder;
    MLPublisherRenderViewsLayout *_renderViewLayout;
    UIView *_debugView;
    struct CGRect _standardFrameRatioInVideo;
}

+ (double)getCurrentAudioSampleRate;
@property(nonatomic) __weak UIView *debugView; // @synthesize debugView=_debugView;
@property(retain, nonatomic) MLPublisherRenderViewsLayout *renderViewLayout; // @synthesize renderViewLayout=_renderViewLayout;
@property(retain, nonatomic) MLSimpleMusicDecoder *smDecoder; // @synthesize smDecoder=_smDecoder;
@property(nonatomic) unsigned long long lastAudioTimestamp; // @synthesize lastAudioTimestamp=_lastAudioTimestamp;
@property(nonatomic) unsigned long long retryAudioRenderTimes; // @synthesize retryAudioRenderTimes=_retryAudioRenderTimes;
@property(nonatomic) unsigned long long connectedTimestampInMs; // @synthesize connectedTimestampInMs=_connectedTimestampInMs;
@property(nonatomic) struct CGRect standardFrameRatioInVideo; // @synthesize standardFrameRatioInVideo=_standardFrameRatioInVideo;
@property(nonatomic) _Bool isLocalFullScreen; // @synthesize isLocalFullScreen=_isLocalFullScreen;
@property(nonatomic) int mixHeight; // @synthesize mixHeight=_mixHeight;
@property(nonatomic) int mixWidth; // @synthesize mixWidth=_mixWidth;
@property(nonatomic) int mixPosY; // @synthesize mixPosY=_mixPosY;
@property(nonatomic) int mixPosX; // @synthesize mixPosX=_mixPosX;
@property(copy, nonatomic) NSString *momoId; // @synthesize momoId=_momoId;
@property(nonatomic) long long readyToAcceptRemoteUserId; // @synthesize readyToAcceptRemoteUserId=_readyToAcceptRemoteUserId;
@property(copy, nonatomic) NSString *hostSdkID; // @synthesize hostSdkID=_hostSdkID;
@property(copy, nonatomic) NSString *acceptRemoteUserId; // @synthesize acceptRemoteUserId=_acceptRemoteUserId;
@property(nonatomic) unsigned long long localUserId; // @synthesize localUserId=_localUserId;
@property(nonatomic) unsigned long long remoteUserId; // @synthesize remoteUserId=_remoteUserId;
@property(copy, nonatomic) NSString *securityId; // @synthesize securityId=_securityId;
@property(copy, nonatomic) NSString *conferenceServer; // @synthesize conferenceServer=_conferenceServer;
@property(retain, nonatomic) NSMutableDictionary *smVideoPlayerDict; // @synthesize smVideoPlayerDict=_smVideoPlayerDict;
@property(retain, nonatomic) ExternalAudioModule *audioModuleInstance; // @synthesize audioModuleInstance=_audioModuleInstance;
@property(retain, nonatomic) ExternalVideoModule *videoModuleInstance; // @synthesize videoModuleInstance=_videoModuleInstance;
@property(retain, nonatomic) EnterConfApi *confInstance; // @synthesize confInstance=_confInstance;
@property(nonatomic) unsigned long long maxPcmDataSampleBufSize; // @synthesize maxPcmDataSampleBufSize=_maxPcmDataSampleBufSize;
@property(retain, nonatomic) NSMutableArray *audioMusicSendoutSampleBuffer; // @synthesize audioMusicSendoutSampleBuffer=_audioMusicSendoutSampleBuffer;
@property(retain, nonatomic) NSMutableArray *audioMusicPlaybackSampleBuffer; // @synthesize audioMusicPlaybackSampleBuffer=_audioMusicPlaybackSampleBuffer;
@property _Bool isBeginAdjustBitrate; // @synthesize isBeginAdjustBitrate=_isBeginAdjustBitrate;
@property(nonatomic) unsigned long long totalSendOutBytes; // @synthesize totalSendOutBytes=_totalSendOutBytes;
@property(nonatomic) unsigned long long totalVideoSendOutBytes; // @synthesize totalVideoSendOutBytes=_totalVideoSendOutBytes;
@property(nonatomic) unsigned long long totalAudioSendOutBytes; // @synthesize totalAudioSendOutBytes=_totalAudioSendOutBytes;
- (void).cxx_destruct;
- (void)enterForeground;
- (void)enterBackground;
- (void)stopMonitorMPlayerTimer;
- (void)startMonitorMPlayerTimer;
- (void)gernerateMusicSampleData;
- (void)pushMusicSampleBuffer:(id)arg1 data:(id)arg2;
- (void)onKickedOut:(long long)arg1 operUserId:(long long)arg2 userId:(long long)arg3 reason:(int)arg4;
- (void)onExitRoom;
- (void)onDisconnected:(int)arg1;
- (void)processMemberExitOrPlayerFailedWithUserId:(unsigned long long)arg1;
- (void)onMemberExit:(long long)arg1 userId:(long long)arg2;
- (void)onSetMyVideoFullScreen:(long long)arg1 fullScreen:(_Bool)arg2;
- (void)onSetSubVideoPos:(long long)arg1 x:(int)arg2 y:(int)arg3 width:(int)arg4 height:(int)arg5;
- (void)enableMixGuessVideoWithUserId:(unsigned long long)arg1 subRatio:(struct CGRect)arg2;
- (void)onMemberEnter:(long long)arg1 userId:(long long)arg2;
- (_Bool)isAcceptRemoteUserId:(unsigned long long)arg1;
- (void)onEnterRoom:(int)arg1;
- (void)onAudioUnitRenderDataError:(int)arg1 instance:(void *)arg2;
- (void)onDeliverRecorderData:(unsigned int)arg1 ioData:(struct AudioBufferList *)arg2;
- (void)playbackAudioSampleData:(char *)arg1 byteSize:(unsigned int)arg2;
- (void)sendOutAudioSampleData:(const char *)arg1 byteSize:(unsigned int)arg2;
- (void)postAudioToScreenRecord:(id)arg1;
- (void)receiveVideoData:(void *)arg1 len:(int)arg2 userID:(long long)arg3 timestamp:(long long)arg4 width:(int)arg5 height:(int)arg6 frameType:(int)arg7;
- (_Bool)stopVideoPlay:(long long)arg1;
- (_Bool)startVideoPlay:(long long)arg1;
- (_Bool)stopVideoCapture;
- (_Bool)startVideoCapture;
- (void)receiveAudioData:(void *)arg1 len:(int)arg2;
- (_Bool)stopAudioPlay;
- (_Bool)startAudioPlay;
- (_Bool)stopAudioCapture;
- (_Bool)startAudioCapture;
- (void)destroyAudioUnitController;
- (void)createAudioUnitControllerWithSubType:(unsigned int)arg1;
- (void)setSubVideoPositionWithUserId:(long long)arg1 position:(struct CGRect)arg2;
- (void)setSubVideoPos:(double)arg1 y:(double)arg2 width:(double)arg3 height:(double)arg4 margin:(double)arg5;
- (_Bool)kickRemoteWithUserId:(id)arg1;
- (void)setAcceptRemoteUserId:(id)arg1 position:(struct CGRect)arg2;
- (void)destroyConference;
- (void)releaseConference;
- (void)startPublisherFailed;
- (void)startPublisherFailedServerEmpty;
- (void)setupConferenceWriter;
- (void)onMPlayerStoppedWithUserId:(unsigned long long)arg1;
- (void)onStartRenderCallBackWithRemoteId:(unsigned long long)arg1 view:(id)arg2;
- (double)musicCurrentPosition;
- (void)stopMusic;
- (void)createMusicPlayerWithUrl:(id)arg1;
- (void)playMusicWithUrl:(id)arg1;
- (void)reportEncoderBitrateAdjust;
- (void)adjustBitrate;
- (unsigned long long)getEncodedVideoBufferDurationInMs;
- (void)sendStartLogInfo;
- (void)encoder:(id)arg1 encodedFrame:(id)arg2;
- (void)processAudioBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (void)stopPublishingWithCompletionCode:(long long)arg1;
- (void)releasePublisher;
- (void)destroySimpleVideoPlayer:(id)arg1;
- (void)destroySimpleVideoPlayerDict;
- (void)destroySimpleVideoPlayerWithUserId:(unsigned long long)arg1;
- (void)createSimpleVideoPlayerWithUserId:(unsigned long long)arg1;
- (void)stopPublishing;
- (id)hostConferenceID;
- (void)startPublishingWithPublishPath:(id)arg1 videoBitrate:(unsigned long long)arg2 videoFramerate:(unsigned long long)arg3 audioBitrate:(unsigned long long)arg4 audioSamplerate:(unsigned long long)arg5 statisticReportCount:(long long)arg6 statisticSec:(long long)arg7 logEventEnable:(long long)arg8 userID:(id)arg9 roomID:(id)arg10 provider:(int)arg11 sessionTime:(unsigned long long)arg12 codecType:(long long)arg13 bitrateAdapter:(long long)arg14 adaptiveCachMax:(long long)arg15 adaptiveCachMin:(long long)arg16 confServer:(id)arg17 confSecurityId:(id)arg18 confSessionId:(id)arg19 confUserId:(id)arg20 maxBufferStartTimestampInMs:(unsigned long long)arg21;
- (void)startPublishingWithOptions:(id)arg1;
- (id)publisherType;
- (void)setSlavesFrameRatioInVideo:(id)arg1;
- (void)layout:(id)arg1 updateSubviewFramesRatio:(id)arg2;
- (void)layout:(id)arg1 updateDisplayFrames:(id)arg2;
- (void)destroyRenderViewsLayout;
- (void)createRenderViewsLayout;
- (id)initWithContentView:(id)arg1 inputVideoSize:(struct CGSize)arg2 isHost:(_Bool)arg3;
- (unsigned long long)writerCachedDataDuration;
- (unsigned long long)writerMuxDataSize;
- (unsigned long long)writerSentDataSize;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

