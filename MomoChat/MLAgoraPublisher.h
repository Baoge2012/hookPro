//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "MLPublisher.h"

#import "AgoraRtcEngineDelegate.h"
#import "MLPublisherRenderViewsLayoutDelegate.h"
#import "MLPublisherStatisticAuxiliaryDataProvider.h"

@class AgoraRtcEngineKit, AgoraRtcLocalVideoStats, AgoraRtcStats, AgoraVideoSource, AgoraYuvEnhancerObjc, MLAgoraDelegateProxy, MLPublisherRenderViewsLayout, NSArray, NSMutableArray, NSObject<OS_dispatch_queue>, NSString, NSTimer;

@interface MLAgoraPublisher : MLPublisher <MLPublisherStatisticAuxiliaryDataProvider, MLPublisherRenderViewsLayoutDelegate, AgoraRtcEngineDelegate>
{
    _Bool _isHost;
    NSString *_conferenceSessionId;
    unsigned long long _conferenceUserId;
    struct MLAgoraAudioFrameObserver *agoraAudioFrameObserver;
    struct AutoPtr<agora::media::IMediaEngine> mediaEngine;
    _Bool _isLocalFullScreen;
    _Bool _isBroadcaster;
    float _musicVolume;
    float _micVolume;
    unsigned long long _totalBytesProduct;
    unsigned long long _totalBytesSendInOneConnection;
    unsigned long long _totalBytesRecvInOneConnection;
    NSString *_hostSdkID;
    NSString *_acceptRemoteConferenceId;
    NSArray *_remoteConferenceIDs;
    NSString *_localConferenceIdStr;
    double _subVideoMagin;
    unsigned long long _connectedTimestampInMs;
    unsigned long long _lastPts;
    unsigned long long _lastAudioTimestamp;
    double _monitorTimerInterval;
    NSTimer *_monitorMPlayerTimer;
    NSMutableArray *_playbackAudioBufferArray;
    NSObject<OS_dispatch_queue> *_mixAudioQueue;
    long long _clientRole;
    long long _videoProfile;
    AgoraRtcEngineKit *_rtcEngine;
    AgoraYuvEnhancerObjc *_agoraEnhancer;
    AgoraVideoSource *_mVideoSrc;
    MLAgoraDelegateProxy *_delegateProxy;
    AgoraRtcStats *_rtcStats;
    AgoraRtcLocalVideoStats *_localVideoStats;
    long long _renderFreezeCount;
    unsigned long long _localStatusCallbackCount;
    MLPublisherRenderViewsLayout *_renderViewLayout;
}

@property(retain, nonatomic) MLPublisherRenderViewsLayout *renderViewLayout; // @synthesize renderViewLayout=_renderViewLayout;
@property(nonatomic) unsigned long long localStatusCallbackCount; // @synthesize localStatusCallbackCount=_localStatusCallbackCount;
@property long long renderFreezeCount; // @synthesize renderFreezeCount=_renderFreezeCount;
@property(retain) AgoraRtcLocalVideoStats *localVideoStats; // @synthesize localVideoStats=_localVideoStats;
@property(retain) AgoraRtcStats *rtcStats; // @synthesize rtcStats=_rtcStats;
@property(retain, nonatomic) MLAgoraDelegateProxy *delegateProxy; // @synthesize delegateProxy=_delegateProxy;
@property(nonatomic) _Bool isBroadcaster; // @synthesize isBroadcaster=_isBroadcaster;
@property(retain) AgoraVideoSource *mVideoSrc; // @synthesize mVideoSrc=_mVideoSrc;
@property(retain, nonatomic) AgoraYuvEnhancerObjc *agoraEnhancer; // @synthesize agoraEnhancer=_agoraEnhancer;
@property(retain) AgoraRtcEngineKit *rtcEngine; // @synthesize rtcEngine=_rtcEngine;
@property(nonatomic) long long videoProfile; // @synthesize videoProfile=_videoProfile;
@property(nonatomic) long long clientRole; // @synthesize clientRole=_clientRole;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *mixAudioQueue; // @synthesize mixAudioQueue=_mixAudioQueue;
@property(retain, nonatomic) NSMutableArray *playbackAudioBufferArray; // @synthesize playbackAudioBufferArray=_playbackAudioBufferArray;
@property(retain, nonatomic) NSTimer *monitorMPlayerTimer; // @synthesize monitorMPlayerTimer=_monitorMPlayerTimer;
@property(nonatomic) double monitorTimerInterval; // @synthesize monitorTimerInterval=_monitorTimerInterval;
@property(nonatomic) unsigned long long lastAudioTimestamp; // @synthesize lastAudioTimestamp=_lastAudioTimestamp;
@property(nonatomic) unsigned long long lastPts; // @synthesize lastPts=_lastPts;
@property(nonatomic) unsigned long long connectedTimestampInMs; // @synthesize connectedTimestampInMs=_connectedTimestampInMs;
@property(nonatomic) double subVideoMagin; // @synthesize subVideoMagin=_subVideoMagin;
@property(nonatomic) _Bool isLocalFullScreen; // @synthesize isLocalFullScreen=_isLocalFullScreen;
@property(copy, nonatomic) NSString *localConferenceIdStr; // @synthesize localConferenceIdStr=_localConferenceIdStr;
@property(copy, nonatomic) NSArray *remoteConferenceIDs; // @synthesize remoteConferenceIDs=_remoteConferenceIDs;
@property(copy, nonatomic) NSString *acceptRemoteConferenceId; // @synthesize acceptRemoteConferenceId=_acceptRemoteConferenceId;
@property(copy, nonatomic) NSString *hostSdkID; // @synthesize hostSdkID=_hostSdkID;
@property(nonatomic) unsigned long long totalBytesRecvInOneConnection; // @synthesize totalBytesRecvInOneConnection=_totalBytesRecvInOneConnection;
@property(nonatomic) unsigned long long totalBytesSendInOneConnection; // @synthesize totalBytesSendInOneConnection=_totalBytesSendInOneConnection;
@property(nonatomic) unsigned long long totalBytesProduct; // @synthesize totalBytesProduct=_totalBytesProduct;
- (float)micVolume;
- (float)musicVolume;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)rtcEngine:(id)arg1 reportRtcStats:(id)arg2;
- (void)rtcEngine:(id)arg1 didRejoinChannel:(id)arg2 withUid:(unsigned long long)arg3 elapsed:(long long)arg4;
- (void)rtcEngine:(id)arg1 didJoinChannel:(id)arg2 withUid:(unsigned long long)arg3 elapsed:(long long)arg4;
- (void)rtcEngineConnectionDidLost:(id)arg1;
- (void)rtcEngineConnectionDidInterrupted:(id)arg1;
- (void)rtcEngine:(id)arg1 localVideoStats:(id)arg2;
- (void)rtcEngine:(id)arg1 didOfflineOfUid:(unsigned long long)arg2 reason:(unsigned long long)arg3;
- (void)rtcEngine:(id)arg1 didJoinedOfUid:(unsigned long long)arg2 elapsed:(long long)arg3;
- (void)rtcEngine:(id)arg1 firstRemoteVideoDecodedOfUid:(unsigned long long)arg2 size:(struct CGSize)arg3 elapsed:(long long)arg4;
- (void)rtcEngine:(id)arg1 didOccurError:(long long)arg2;
- (void)rtcEngine:(id)arg1 didOccurWarning:(long long)arg2;
- (void)rtcEngineMediaEngineDidAudioMixingFinish:(id)arg1;
- (void)setIsAudioRecording:(_Bool)arg1;
- (void)onPlaybackAudioFrameBeforeMixing:(unsigned int)arg1 audioFrame:(id)arg2;
- (void)onPlaybackAudioFrame:(id)arg1;
- (void)onRecordAudioFrame:(id)arg1;
- (void)layout:(id)arg1 updateSubviewFramesRatio:(id)arg2;
- (void)layout:(id)arg1 updateDisplayFrames:(id)arg2;
- (void)configRenderViewsLayoutIdInfo;
- (void)createRenderViewsLayout;
- (void)setSEIParamWithHostID:(id)arg1 subViewFrame:(id)arg2;
- (void)leaveChannel;
- (void)updateAudioLoopbackSetting;
- (void)loadAgoraKit;
- (void)removeRemoteCanvasForUserId:(long long)arg1;
- (void)removeRemoteSlaveForUserId:(long long)arg1;
- (void)removeRemoteSlaveForUserIdStr:(id)arg1;
- (void)removeAllRemote;
- (void)onMemberExit:(id)arg1 userId:(long long)arg2;
- (void)onMemberEnter:(id)arg1 userId:(long long)arg2;
- (void)setSlavesFrameRatioInVideo:(id)arg1;
- (void)setSubVideoPos:(double)arg1 y:(double)arg2 width:(double)arg3 height:(double)arg4 margin:(double)arg5;
- (_Bool)kickRemoteWithUserId:(id)arg1;
- (void)setAcceptRemoteUserId:(id)arg1;
- (void)destroyConference;
- (void)setupWriter;
- (void)startRenderCallBackForRemoteId:(id)arg1 view:(id)arg2;
- (void)enterForeground;
- (void)enterBackground;
- (float)getMicVolume;
- (void)setMicVolume:(float)arg1;
- (float)getMusicVolume;
- (void)setMusicVolume:(float)arg1;
- (void)playMusicDidFailed;
- (void)playMusicDidCompleted;
- (double)musicCurrentPosition;
- (void)stopMusic;
- (void)playMusicWithUrl:(id)arg1;
- (void)publishConnectionRecover;
- (void)publishFailed;
- (void)publishConnectionInterrupt;
- (void)processVideoBuffer:(struct __CVBuffer *)arg1 atTime:(CDStruct_1b6d18a9)arg2;
- (void)stopPublishingWithCompletionCode:(long long)arg1;
- (void)stopPublishing;
- (void)sendStartLogInfo;
- (void)startPublishingWithPublishPath:(id)arg1 videoBitrate:(unsigned long long)arg2 videoFramerate:(unsigned long long)arg3 audioBitrate:(unsigned long long)arg4 audioSamplerate:(unsigned long long)arg5 statisticReportCount:(long long)arg6 statisticSec:(long long)arg7 logEventEnable:(long long)arg8 userID:(id)arg9 roomID:(id)arg10 provider:(int)arg11 sessionTime:(unsigned long long)arg12 codecType:(long long)arg13 bitrateAdapter:(long long)arg14 adaptiveCachMax:(long long)arg15 adaptiveCachMin:(long long)arg16 confServer:(id)arg17 confSecurityId:(id)arg18 confSessionId:(id)arg19 confUserId:(id)arg20 maxBufferStartTimestampInMs:(unsigned long long)arg21;
- (void)startPublishingWithOptions:(id)arg1;
- (id)publisherType;
- (void)dealloc;
- (void)releasePublisher;
- (id)initWithContentView:(id)arg1 inputVideoSize:(struct CGSize)arg2 isHost:(_Bool)arg3;
- (id)hostConferenceID;
- (unsigned long long)writerSentVideoFrameRate;
- (unsigned long long)writerSentVideoBitrate;
- (unsigned long long)writerSentAudioBitrate;
- (unsigned long long)writerVideoFreezeCount;
- (unsigned long long)writerCachedDataDuration;
- (unsigned long long)writerMuxDataSize;
- (unsigned long long)writerSentDataSize;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

