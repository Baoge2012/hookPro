//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class ConnectionDataCollection, NSString, NWPolicyResult, NWSPDYOrigin, NWSPDYProxy, NWUTSession, SPDYDataChannelAuthRequest, SPDYTraceString;
@protocol SPDYSessionDelegate;

@interface NWSPDYSession : NSObject
{
    struct NAL_session_t *_socket;	// 8 = 0x8
    NWSPDYProxy *_proxy;	// 16 = 0x10
    _Bool _pingNoReply;	// 24 = 0x18
    _Bool _longChain;	// 25 = 0x19
    _Bool _varProxy;	// 26 = 0x1a
    int _status;	// 28 = 0x1c
    unsigned int _retry_times;	// 32 = 0x20
    unsigned int _retry;	// 36 = 0x24
    unsigned int _timeout;	// 40 = 0x28
    unsigned int _idle;	// 44 = 0x2c
    _Bool _authentication;	// 48 = 0x30
    SPDYDataChannelAuthRequest *_authRequest;	// 56 = 0x38
    ConnectionDataCollection *_collection;	// 64 = 0x40
    NWUTSession *_uts;	// 72 = 0x48
    double _sessionBeginTime;	// 80 = 0x50
    NSString *_origin_ip;	// 88 = 0x58
    NSString *_connect_ip;	// 96 = 0x60
    int _innerStatusForLog;	// 104 = 0x68
    NWSPDYOrigin *_origin;	// 112 = 0x70
    id <SPDYSessionDelegate> _sessionDelegate;	// 120 = 0x78
    NSString *_domain;	// 128 = 0x80
    SPDYTraceString *_trace;	// 136 = 0x88
    NWPolicyResult *_policyResult;	// 144 = 0x90
}

+ (id)descState:(int)arg1;
+ (void)initialize;
@property(nonatomic) int innerStatusForLog; // @synthesize innerStatusForLog=_innerStatusForLog;
@property(retain, nonatomic) NWPolicyResult *policyResult; // @synthesize policyResult=_policyResult;
@property(readonly, nonatomic) SPDYTraceString *trace; // @synthesize trace=_trace;
@property(readonly, nonatomic) NSString *domain; // @synthesize domain=_domain;
@property(nonatomic) __weak id <SPDYSessionDelegate> sessionDelegate; // @synthesize sessionDelegate=_sessionDelegate;
@property(readonly, nonatomic) NWSPDYOrigin *origin; // @synthesize origin=_origin;
- (void).cxx_destruct;
- (void)dealloc;
- (void)reportCreateSessionCostTime:(double)arg1;
- (void)reportCreateSessionScenes:(id)arg1;
- (id)currentIP;
- (id)getProtocol;
- (int)getSessionStatus;
- (id)getConnData;
- (void)dataCollection:(struct NAL_connection_count_t *)arg1;
- (void)recvCustomFrameType:(unsigned short)arg1 withFlags:(unsigned char)arg2 withData:(id)arg3;
- (void)sendCustomFrameType:(unsigned short)arg1 withFlags:(unsigned char)arg2 withData:(id)arg3 sslIndex:(unsigned int)arg4;
- (void)sendData:(id)arg1;
- (void)sendRequest:(id)arg1;
- (void)sendPingRequest;
- (void)sendAuthRequest:(id)arg1;
- (int)idleValue;
- (_Bool)idle;
- (void)clientPingTimeout;
- (void)recvPingRequest:(_Bool)arg1;
- (void)recvPingReply:(_Bool)arg1;
- (void)sendSpdyPing;
- (void)sendPing;
- (void)onAuthentication:(_Bool)arg1 withStatus:(id)arg2;
- (void)close:(id)arg1;
- (_Bool)connFail:(int)arg1 error:(id)arg2;
- (void)disConnect:(id)arg1;
- (id)getUTProtocolType;
- (void)onConnect;
- (void)asynConnect;
- (_Bool)valid;
- (void)keeplived:(int)arg1 longChain:(_Bool)arg2;
- (void)setRetrytimes:(int)arg1;
- (void)setConntimes:(int)arg1;
- (_Bool)isBioProtocol;
- (_Bool)is0RTT;
- (_Bool)isAuth;
- (id)initWithOrigin:(id)arg1 host:(id)arg2 delegate:(id)arg3 policy:(id)arg4 ignLoc:(_Bool)arg5;
- (struct NAL_session_t *)nalSocketCreate:(id)arg1;
- (id)configProxiesFromURL:(id)arg1;

@end

