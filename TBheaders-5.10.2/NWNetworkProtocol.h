//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSURLProtocol.h>

@class NSDictionary, NSMutableData, NSMutableString, NSMutableURLRequest, NSString, NSThread, NSURLConnection, NWPolicyResult, NWSPDYURLConnection, NWSendHelper, NWUTObject;

@interface NWNetworkProtocol : NSURLProtocol
{
    int redirectURLCount;	// 16 = 0x10
    double _startLoadingTime;	// 24 = 0x18
    double _startSendingTime;	// 32 = 0x20
    NSString *_originalURL;	// 40 = 0x28
    _Bool _hasReceiveResponse;	// 48 = 0x30
    _Bool _isFinished;	// 49 = 0x31
    _Bool _spdyFlag;	// 50 = 0x32
    _Bool _isHttpDnsReq;	// 51 = 0x33
    NSURLConnection *_connection;	// 56 = 0x38
    NSMutableURLRequest *_sendRequest;	// 64 = 0x40
    NWUTObject *_utObject;	// 72 = 0x48
    NSThread *_currentThread;	// 80 = 0x50
    long long _spdyOneError;	// 88 = 0x58
    long long _spdyTwoError;	// 96 = 0x60
    NSDictionary *_responseHeader;	// 104 = 0x68
    NSMutableData *_responseData;	// 112 = 0x70
    NWSPDYURLConnection *_spdyConnection;	// 120 = 0x78
    NWPolicyResult *_httpdns;	// 128 = 0x80
    NWSendHelper *_sendHelper;	// 136 = 0x88
    long long _httpStatusCode;	// 144 = 0x90
    long long _expectedContentLength;	// 152 = 0x98
    long long _reqRecTotalSize;	// 160 = 0xa0
    NSMutableString *_reqTraceStr;	// 168 = 0xa8
}

+ (id)addressesForHostname:(id)arg1;
+ (_Bool)deviceSystemIsLargeIOS8;
+ (id)canonicalRequestForRequest:(id)arg1;
+ (_Bool)invalidNSURL:(id)arg1;
+ (_Bool)protocolCheck:(id)arg1;
+ (_Bool)canInitWithRequest:(id)arg1;
+ (void)initialize;
+ (unsigned long long)getQueryIndex:(id)arg1;
+ (id)urlWithoutQuery:(id)arg1;
@property(retain, nonatomic) NSMutableString *reqTraceStr; // @synthesize reqTraceStr=_reqTraceStr;
@property(nonatomic) long long reqRecTotalSize; // @synthesize reqRecTotalSize=_reqRecTotalSize;
@property(nonatomic) long long expectedContentLength; // @synthesize expectedContentLength=_expectedContentLength;
@property(nonatomic) long long httpStatusCode; // @synthesize httpStatusCode=_httpStatusCode;
@property(retain, nonatomic) NWSendHelper *sendHelper; // @synthesize sendHelper=_sendHelper;
@property(retain, nonatomic) NWPolicyResult *httpdns; // @synthesize httpdns=_httpdns;
@property(retain, nonatomic) NWSPDYURLConnection *spdyConnection; // @synthesize spdyConnection=_spdyConnection;
@property(retain, nonatomic) NSMutableData *responseData; // @synthesize responseData=_responseData;
@property(retain, nonatomic) NSDictionary *responseHeader; // @synthesize responseHeader=_responseHeader;
@property(nonatomic) long long spdyTwoError; // @synthesize spdyTwoError=_spdyTwoError;
@property(nonatomic) long long spdyOneError; // @synthesize spdyOneError=_spdyOneError;
@property(nonatomic) __weak NSThread *currentThread; // @synthesize currentThread=_currentThread;
@property(nonatomic) _Bool isHttpDnsReq; // @synthesize isHttpDnsReq=_isHttpDnsReq;
@property(retain) NWUTObject *utObject; // @synthesize utObject=_utObject;
@property(retain) NSMutableURLRequest *sendRequest; // @synthesize sendRequest=_sendRequest;
@property _Bool spdyFlag; // @synthesize spdyFlag=_spdyFlag;
@property(retain) NSURLConnection *connection; // @synthesize connection=_connection;
- (void).cxx_destruct;
- (void)recordRequest:(id)arg1;
- (unsigned short)currentRequestPort:(id)arg1;
- (id)elapseWithTime:(double)arg1;
- (_Bool)isUnreachable:(id)arg1;
- (void)recordHTTPFlow:(id)arg1 size:(long long)arg2;
- (void)markRequestDidFinish;
- (void)markRequestDidStart;
- (void)utAndTrace:(double)arg1;
- (void)resendSPDY:(id)arg1;
- (void)useConnectionThreadSendRequest:(id)arg1;
- (void)didFailWithError:(id)arg1 resp:(id)arg2;
- (void)didloadFinishing;
- (void)didLoadLog:(id)arg1;
- (void)didLoadData:(id)arg1;
- (void)didReceiveResponse:(id)arg1 info:(id)arg2;
- (void)reportDNSIP:(id)arg1 withUtObject:(id)arg2;
- (id)willSendRequest:(id)arg1 redirectResponse:(id)arg2;
- (id)connection:(id)arg1 willCacheResponse:(id)arg2;
- (void)connection:(id)arg1 didCancelAuthenticationChallenge:(id)arg2;
- (void)connection:(id)arg1 willSendRequestForAuthenticationChallenge:(id)arg2;
- (void)probeSSLError:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)explicitNotifyReceiveResponse:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (id)getPolicyContext;
- (void)connection:(id)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)initUtArg;
- (void)stopLoading;
- (void)sendHttpRequest;
- (void)sendTnetRequest;
- (void)startLoading;

@end

