//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "LVScrollViewDelegate.h"

#import "UITableViewDataSource-Protocol.h"
#import "UITableViewDelegate-Protocol.h"

@class NSString;

@interface LVTableViewDelegate : LVScrollViewDelegate <UITableViewDataSource, UITableViewDelegate>
{
    double _dividerHeight;	// 8 = 0x8
}

@property(nonatomic) double dividerHeight; // @synthesize dividerHeight=_dividerHeight;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)callWithScrollArgsForKey:(id)arg1;
- (struct _LVUserDataInfo *)retUserDataCallKey1:(const char *)arg1 key2:(const char *)arg2 mapedSection:(long long)arg3;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (double)retHeightCallAtIndexPath:(id)arg1 identifier:(id)arg2 lvState:(struct lv_State *)arg3;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)retStrCallKey1:(const char *)arg1 key2:(const char *)arg2 mapedSection:(long long)arg3 mapedRow:(long long)arg4;
- (double)retFloatCallKey1:(const char *)arg1 key2:(const char *)arg2 mapedSection:(long long)arg3;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

