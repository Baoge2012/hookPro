//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIControl.h>

@class UIButton, UIColor, UIView;
@protocol TBPSSliderDelegate;

@interface TBPSSlider : UIControl
{
    UIView *_backView;	// 8 = 0x8
    UIButton *_btnUp;	// 16 = 0x10
    UIButton *_btnDown;	// 24 = 0x18
    UIView *_shallowView;	// 32 = 0x20
    UIView *_whiteView;	// 40 = 0x28
    UIView *_roundView;	// 48 = 0x30
    double gap;	// 56 = 0x38
    double inverseGap;	// 64 = 0x40
    _Bool _showHalfWhenCirlceIsTop;	// 72 = 0x48
    _Bool _lineWidth;	// 73 = 0x49
    _Bool _circleRadius;	// 74 = 0x4a
    _Bool _isFullFillCircle;	// 75 = 0x4b
    _Bool _isSliding;	// 76 = 0x4c
    int _direction;	// 80 = 0x50
    double _minValue;	// 88 = 0x58
    double _maxValue;	// 96 = 0x60
    double _value;	// 104 = 0x68
    CDUnknownBlockType _didChangeValueBlock;	// 112 = 0x70
    CDUnknownBlockType _touchEndBlock;	// 120 = 0x78
    id <TBPSSliderDelegate> _delegate;	// 128 = 0x80
    UIColor *_bgLineColor;	// 136 = 0x88
    UIColor *_slidedLineColor;	// 144 = 0x90
    UIColor *_circleColor;	// 152 = 0x98
    double _scaleNum;	// 160 = 0xa0
}

@property(nonatomic) double scaleNum; // @synthesize scaleNum=_scaleNum;
@property(retain, nonatomic) UIColor *circleColor; // @synthesize circleColor=_circleColor;
@property(retain, nonatomic) UIColor *slidedLineColor; // @synthesize slidedLineColor=_slidedLineColor;
@property(retain, nonatomic) UIColor *bgLineColor; // @synthesize bgLineColor=_bgLineColor;
@property(nonatomic) int direction; // @synthesize direction=_direction;
@property(nonatomic) id <TBPSSliderDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) CDUnknownBlockType touchEndBlock; // @synthesize touchEndBlock=_touchEndBlock;
@property(copy, nonatomic) CDUnknownBlockType didChangeValueBlock; // @synthesize didChangeValueBlock=_didChangeValueBlock;
@property(nonatomic) _Bool isSliding; // @synthesize isSliding=_isSliding;
@property(nonatomic) _Bool isFullFillCircle; // @synthesize isFullFillCircle=_isFullFillCircle;
@property(nonatomic) _Bool circleRadius; // @synthesize circleRadius=_circleRadius;
@property(nonatomic) _Bool lineWidth; // @synthesize lineWidth=_lineWidth;
@property(nonatomic) _Bool showHalfWhenCirlceIsTop; // @synthesize showHalfWhenCirlceIsTop=_showHalfWhenCirlceIsTop;
@property(nonatomic) double value; // @synthesize value=_value;
@property(nonatomic) double maxValue; // @synthesize maxValue=_maxValue;
@property(nonatomic) double minValue; // @synthesize minValue=_minValue;
- (void).cxx_destruct;
- (void)updateTouchPoint:(id)arg1;
- (void)callbackTouchEnd:(_Bool)arg1;
- (void)handlePanGesture:(id)arg1;
- (void)downPressed:(id)arg1;
- (void)upperPressed:(id)arg1;
- (void)buildTouchEndBlock:(CDUnknownBlockType)arg1;
- (void)buildDidChangeValueBlock:(CDUnknownBlockType)arg1;
- (void)setValue:(double)arg1 shouldCallBack:(_Bool)arg2;
- (float)heightToValue:(float)arg1;
- (float)valueToHeight:(float)arg1;
- (void)fillLineColor:(id)arg1 slidedLineColor:(id)arg2 circleColor:(id)arg3 shouldShowHalf:(_Bool)arg4 lineWidth:(double)arg5 circleRadius:(double)arg6 isFullFillCircle:(_Bool)arg7;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1 direction:(int)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

