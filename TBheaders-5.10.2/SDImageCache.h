//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "NSCacheDelegate-Protocol.h"

@class NSCache, NSDictionary, NSFileManager, NSMutableArray, NSMutableDictionary, NSRecursiveLock, NSString, TBFastImageCache;

@interface SDImageCache : NSObject <NSCacheDelegate>
{
    NSRecursiveLock *_lock;	// 8 = 0x8
    NSFileManager *_fileManager;	// 16 = 0x10
    _Bool _shouldDecompressImages;	// 24 = 0x18
    _Bool _cleanDiskShouldStop;	// 25 = 0x19
    long long _maxCacheAge;	// 32 = 0x20
    unsigned long long _maxCacheSize;	// 40 = 0x28
    NSCache *_memCache;	// 48 = 0x30
    NSString *_diskCachePath;	// 56 = 0x38
    NSMutableArray *_customPaths;	// 64 = 0x40
    struct dispatch_queue_s *_ioQueue;	// 72 = 0x48
    NSString *_homePageCachePath;	// 80 = 0x50
    NSString *_festivalCachePath;	// 88 = 0x58
    NSMutableDictionary *_levelModelDict;	// 96 = 0x60
    NSMutableDictionary *_md5ImageKeyDict;	// 104 = 0x68
    NSDictionary *_moduleCacheLevelRule;	// 112 = 0x70
    unsigned long long _maxHomePageCacheSize;	// 120 = 0x78
    unsigned long long _maxFestivalCacheSize;	// 128 = 0x80
    unsigned long long _maxWatchCacheSize;	// 136 = 0x88
    unsigned long long _bucketNumber;	// 144 = 0x90
    TBFastImageCache *_fastCache;	// 152 = 0x98
}

+ (id)sharedImageCache;
@property(retain, nonatomic) TBFastImageCache *fastCache; // @synthesize fastCache=_fastCache;
@property(nonatomic) unsigned long long bucketNumber; // @synthesize bucketNumber=_bucketNumber;
@property(nonatomic) unsigned long long maxWatchCacheSize; // @synthesize maxWatchCacheSize=_maxWatchCacheSize;
@property(nonatomic) unsigned long long maxFestivalCacheSize; // @synthesize maxFestivalCacheSize=_maxFestivalCacheSize;
@property(nonatomic) unsigned long long maxHomePageCacheSize; // @synthesize maxHomePageCacheSize=_maxHomePageCacheSize;
@property(nonatomic) _Bool cleanDiskShouldStop; // @synthesize cleanDiskShouldStop=_cleanDiskShouldStop;
@property(retain, nonatomic) NSDictionary *moduleCacheLevelRule; // @synthesize moduleCacheLevelRule=_moduleCacheLevelRule;
@property(retain, nonatomic) NSMutableDictionary *md5ImageKeyDict; // @synthesize md5ImageKeyDict=_md5ImageKeyDict;
@property(retain, nonatomic) NSMutableDictionary *levelModelDict; // @synthesize levelModelDict=_levelModelDict;
@property(retain, nonatomic) NSString *festivalCachePath; // @synthesize festivalCachePath=_festivalCachePath;
@property(retain, nonatomic) NSString *homePageCachePath; // @synthesize homePageCachePath=_homePageCachePath;
@property(nonatomic) struct dispatch_queue_s *ioQueue; // @synthesize ioQueue=_ioQueue;
@property(retain, nonatomic) NSMutableArray *customPaths; // @synthesize customPaths=_customPaths;
@property(retain, nonatomic) NSString *diskCachePath; // @synthesize diskCachePath=_diskCachePath;
@property(retain, nonatomic) NSCache *memCache; // @synthesize memCache=_memCache;
@property(nonatomic) unsigned long long maxCacheSize; // @synthesize maxCacheSize=_maxCacheSize;
@property(nonatomic) long long maxCacheAge; // @synthesize maxCacheAge=_maxCacheAge;
@property(nonatomic) _Bool shouldDecompressImages; // @synthesize shouldDecompressImages=_shouldDecompressImages;
- (void).cxx_destruct;
- (void)flushMetaData;
- (_Bool)isOpenFastCache:(id)arg1;
- (long long)hitCacheTypeWithBaseURL:(id)arg1 requireInfo:(id)arg2 mergedDict:(id)arg3;
- (id)getPlaceHolder:(id)arg1 fullUrl:(id)arg2 baseUrl:(id)arg3 extParam:(id)arg4;
- (id)getScaleToSmallImage:(id)arg1 fullUrl:(id)arg2 baseUrl:(id)arg3 width:(long long)arg4 height:(long long)arg5 extParam:(id)arg6;
- (long long)getDiskCacheLimit:(id)arg1;
- (_Bool)isOfflineCache:(id)arg1;
- (id)getModuleCachePathRule;
- (id)getCachePath:(id)arg1 moduleName:(id)arg2;
- (id)getCachePath:(id)arg1;
- (id)levelModelFilePath;
- (void)saveImageLevelModel;
- (void)cleanLevelModel;
- (void)removeImageLevelModelSizeForMD5:(id)arg1;
- (void)addImageLevelModelSizeForKey:(id)arg1 fileName:(id)arg2 imageInfo:(id)arg3;
- (id)getImageLevelModelSizeForKey:(id)arg1;
- (long long)getImageLevelIndexCount;
- (void)setupLevelModel;
- (unsigned long long)maxCostByPhoneRAM;
- (void)calculateSizeWithCompletionBlock:(CDUnknownBlockType)arg1;
- (unsigned long long)getDiskCount;
- (unsigned long long)getSize;
- (void)backgroundCleanDisk;
- (void)cleanDiskWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)cleanDisk;
- (void)clearDiskOnCompletion:(CDUnknownBlockType)arg1;
- (void)clearDisk;
- (void)clearMemory;
- (unsigned long long)maxMemoryCost;
- (void)setMaxMemoryCost:(unsigned long long)arg1;
- (void)removeImageForKey:(id)arg1 module:(id)arg2 fromDisk:(_Bool)arg3 withCompletion:(CDUnknownBlockType)arg4;
- (void)removeImageForKey:(id)arg1 fromDisk:(_Bool)arg2;
- (id)queryDiskCacheForKey:(id)arg1 needPlaceHolder:(_Bool)arg2 options:(unsigned long long)arg3 extParam:(id)arg4 done:(CDUnknownBlockType)arg5;
- (id)queryDiskCacheForKey:(id)arg1 done:(CDUnknownBlockType)arg2;
- (id)scaledImageForKey:(id)arg1 image:(id)arg2;
- (id)diskImageForKey:(id)arg1 imageInfo:(id)arg2 needSmallCopy:(_Bool)arg3 needPlaceHolder:(_Bool)arg4 extParam:(id)arg5;
- (id)diskImageForKey:(id)arg1;
- (id)diskImageDataBySearchingAllPathsForKey:(id)arg1 extParam:(id)arg2;
- (id)diskImageDataBySearchingAllPathsForKey:(id)arg1;
- (id)imageFromDiskCacheForKey:(id)arg1 needSmallCopy:(_Bool)arg2 extParam:(id)arg3;
- (id)imageFromDiskCacheForKey:(id)arg1 needSmallCopy:(_Bool)arg2;
- (id)imageFromDiskCacheForKey:(id)arg1;
- (id)imageFromMemoryCacheForKey:(id)arg1;
- (void)diskImageExistsWithKey:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)diskImageExistsWithKey:(id)arg1;
- (void)storeImage:(id)arg1 forKey:(id)arg2 toDisk:(_Bool)arg3;
- (void)storeImage:(id)arg1 forKey:(id)arg2;
- (void)storeImage:(id)arg1 recalculateFromImage:(_Bool)arg2 imageData:(id)arg3 forKey:(id)arg4 options:(long long)arg5 toDisk:(_Bool)arg6 extParam:(id)arg7;
- (void)storeImage:(id)arg1 recalculateFromImage:(_Bool)arg2 imageData:(id)arg3 forKey:(id)arg4 toDisk:(_Bool)arg5;
- (id)cachedFileNameForKey:(id)arg1;
- (id)defaultCachePathForKey:(id)arg1;
- (void)removeCacheFileWithBaseURL:(id)arg1;
- (id)cachePathForMd5FileName:(id)arg1 inPath:(id)arg2;
- (id)cachePathForKey:(id)arg1 inPath:(id)arg2;
- (void)stopCleanDisk;
- (void)addReadOnlyCachePath:(id)arg1;
- (void)dealloc;
- (id)initWithNamespace:(id)arg1;
- (void)cache:(id)arg1 willEvictObject:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

