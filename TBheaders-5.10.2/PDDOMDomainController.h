//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "PDDomainController.h"

#import "PDDOMCommandDelegate-Protocol.h"

@class NSArray, NSMutableDictionary, NSString, PDDOMDomain, PDDOMNode, UIView;

@interface PDDOMDomainController : PDDomainController <PDDOMCommandDelegate>
{
    PDDOMNode *rootDomNode;	// 8 = 0x8
    NSArray *_viewKeyPathsToDisplay;	// 16 = 0x10
    NSMutableDictionary *_objectsForNodeIds;	// 24 = 0x18
    NSMutableDictionary *_nodeIdsForObjects;	// 32 = 0x20
    unsigned long long _nodeIdCounter;	// 40 = 0x28
    UIView *_viewToHighlight;	// 48 = 0x30
    UIView *_highlightOverlay;	// 56 = 0x38
    UIView *_inspectModeOverlay;	// 64 = 0x40
    struct CGPoint _lastPanPoint;	// 72 = 0x48
    struct CGPoint _originalPinchLocation;	// 88 = 0x58
    struct CGRect _originalPinchFrame;	// 104 = 0x68
}

+ (Class)domainClass;
+ (void)startMonitoringUIViewChanges;
+ (id)defaultInstance;
@property(retain, nonatomic) UIView *inspectModeOverlay; // @synthesize inspectModeOverlay=_inspectModeOverlay;
@property(nonatomic) struct CGPoint originalPinchLocation; // @synthesize originalPinchLocation=_originalPinchLocation;
@property(nonatomic) struct CGRect originalPinchFrame; // @synthesize originalPinchFrame=_originalPinchFrame;
@property(nonatomic) struct CGPoint lastPanPoint; // @synthesize lastPanPoint=_lastPanPoint;
@property(retain, nonatomic) UIView *highlightOverlay; // @synthesize highlightOverlay=_highlightOverlay;
@property(retain, nonatomic) UIView *viewToHighlight; // @synthesize viewToHighlight=_viewToHighlight;
@property(nonatomic) unsigned long long nodeIdCounter; // @synthesize nodeIdCounter=_nodeIdCounter;
@property(retain, nonatomic) NSMutableDictionary *nodeIdsForObjects; // @synthesize nodeIdsForObjects=_nodeIdsForObjects;
@property(retain, nonatomic) NSMutableDictionary *objectsForNodeIds; // @synthesize objectsForNodeIds=_objectsForNodeIds;
@property(retain, nonatomic) NSArray *viewKeyPathsToDisplay; // @synthesize viewKeyPathsToDisplay=_viewKeyPathsToDisplay;
@property(retain, nonatomic) PDDOMNode *rootDomNode; // @synthesize rootDomNode;
- (void).cxx_destruct;
- (const char *)typeEncodingForKeyPath:(id)arg1 onObject:(id)arg2;
- (id)stringForValue:(id)arg1 atKeyPath:(id)arg2 onObject:(id)arg3;
- (id)attributesArrayForObject:(id)arg1;
- (id)elementNodeForObject:(id)arg1 withChildNodes:(id)arg2;
- (id)nodeForView:(id)arg1;
- (id)windowNodes;
- (id)rootElement;
- (id)rootNode;
- (id)getAndIncrementNodeIdCount;
- (_Bool)shouldIgnoreView:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)stopTrackingAllViews;
- (void)stopTrackingView:(id)arg1;
- (void)startTrackingView:(id)arg1 withNodeId:(id)arg2;
- (void)addView:(id)arg1;
- (void)removeView:(id)arg1;
- (void)windowShown:(id)arg1;
- (void)windowHidden:(id)arg1;
- (void)revealHighlightOverlayForView:(id)arg1 allowInteractions:(_Bool)arg2;
- (void)configureHighlightOverlayWithConfig:(id)arg1;
- (id)chooseViewAtPoint:(struct CGPoint)arg1 givenStartingView:(id)arg2;
- (void)inspectViewAtPoint:(struct CGPoint)arg1;
- (void)handleInspectPanGesture:(id)arg1;
- (void)handleInspectTapGesture:(id)arg1;
- (void)handleResizePinchGesture:(id)arg1;
- (void)handleMovePanGesure:(id)arg1;
- (void)domain:(id)arg1 requestNodeWithObjectId:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)domain:(id)arg1 setInspectModeEnabledWithEnabled:(id)arg2 highlightConfig:(id)arg3 callback:(CDUnknownBlockType)arg4;
- (void)domain:(id)arg1 setAttributesAsTextWithNodeId:(id)arg2 text:(id)arg3 name:(id)arg4 callback:(CDUnknownBlockType)arg5;
- (void)domain:(id)arg1 removeNodeWithNodeId:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)domain:(id)arg1 hideHighlightWithCallback:(CDUnknownBlockType)arg2;
- (void)domain:(id)arg1 highlightNodeWithNodeId:(id)arg2 highlightConfig:(id)arg3 callback:(CDUnknownBlockType)arg4;
- (void)domain:(id)arg1 getDocumentWithCallback:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(retain, nonatomic) PDDOMDomain *domain; // @dynamic domain;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

