//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSLock, NSMutableDictionary;
@protocol IDynamicDataStoreComponent, TBSessionManagerDelegate;

@interface TBSessionManager : NSObject
{
    id <TBSessionManagerDelegate> _delegate;	// 8 = 0x8
    NSMutableDictionary *_session;	// 16 = 0x10
    struct dispatch_queue_s *_sessionQueue;	// 24 = 0x18
    NSLock *_readSessionLock;	// 32 = 0x20
    id <IDynamicDataStoreComponent> _securityStoreManager;	// 40 = 0x28
}

+ (id)sharedManager;
@property(retain, nonatomic) id <IDynamicDataStoreComponent> securityStoreManager; // @synthesize securityStoreManager=_securityStoreManager;
@property(retain, nonatomic) NSLock *readSessionLock; // @synthesize readSessionLock=_readSessionLock;
@property(nonatomic) struct dispatch_queue_s *sessionQueue; // @synthesize sessionQueue=_sessionQueue;
@property(retain, nonatomic) NSMutableDictionary *session; // @synthesize session=_session;
@property(nonatomic) __weak id <TBSessionManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)tb_p_buildSessionFilePath;
- (_Bool)tb_p_isSessionSafeStoreDegradeEnabled;
- (_Bool)tb_p_isNewSecuritySessionStoreEnabled;
- (void)tb_p_deleteSessionInSecureStore;
- (void)tb_p_deleleSessionInUserDefault;
- (void)tb_p_deleteSessionFile;
- (void)tb_p_deleteSessionFile:(id)arg1;
- (void)tb_p_oldReadFromUserDefaults;
- (void)tb_p_oldReadFromTBDocs:(id)arg1;
- (_Bool)tb_p_oldReadFromSecureStore;
- (void)tb_p_oldReadSessionEntry;
- (void)tb_p_readFromSessionFileByCompatibleFlow:(id)arg1;
- (void)tb_p_readFromUserDefaultsByCompatibleFlow;
- (void)tb_p_readSecureSessionByCompatibleFlow;
- (_Bool)tb_p_readSessionFromSecureStore;
- (void)tb_p_newSessionReadEntry;
- (void)tb_p_readSessionEntry;
- (void)tb_p_writeToSecureStore;
- (void)tb_p_writeToDocs;
- (void)tb_p_writeSessionEntry;
- (id)tb_p_handleSessionString:(id)arg1 needMonitor:(_Bool)arg2;
- (void)tb_p_storeTokenAndExpiredTimeWithResult:(id)arg1;
- (void)makeSessionInvalidLocally;
- (void)setCookies:(id)arg1;
- (void)clearSession;
- (void)storeSessionWithLoginResult:(id)arg1 loginType:(int)arg2;
- (id)currentSession;
- (id)init;

@end

