//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSString, NSTimer, UIView, VCPreviewView;
@protocol OS_dispatch_queue, VCSessionDelegate;

@interface VCSimpleSession : NSObject
{
    VCPreviewView *_previewView;	// 8 = 0x8
    struct shared_ptr<videocore::simpleApi::PixelBufferOutput> m_pbOutput;	// 16 = 0x10
    struct shared_ptr<videocore::iOS::MicSource> m_micSource;	// 32 = 0x20
    struct shared_ptr<videocore::iOS::CameraSource> m_cameraSource;	// 48 = 0x30
    struct shared_ptr<videocore::Apple::PixelBufferSource> m_pixelBufferSource;	// 64 = 0x40
    struct shared_ptr<videocore::Split> m_videoSplit;	// 80 = 0x50
    struct shared_ptr<videocore::IAudioMixer> m_audioMixer;	// 96 = 0x60
    struct shared_ptr<videocore::IVideoMixer> m_videoMixer;	// 112 = 0x70
    struct shared_ptr<videocore::ITransform> m_h264Encoder;	// 128 = 0x80
    struct shared_ptr<videocore::ITransform> m_aacEncoder;	// 144 = 0x90
    struct shared_ptr<videocore::ITransform> m_h264Packetizer;	// 160 = 0xa0
    struct shared_ptr<videocore::ITransform> m_aacPacketizer;	// 176 = 0xb0
    struct shared_ptr<videocore::Split> m_aacSplit;	// 192 = 0xc0
    struct shared_ptr<videocore::Split> m_h264Split;	// 208 = 0xd0
    struct shared_ptr<videocore::Apple::MP4Multiplexer> m_muxer;	// 224 = 0xe0
    struct shared_ptr<videocore::IOutputSession> m_outputSession;	// 240 = 0xf0
    struct shared_ptr<videocore::ITransform> m_faceBeauty;	// 256 = 0x100
    NSObject<OS_dispatch_queue> *_graphManagementQueue;	// 272 = 0x110
    struct CGSize _videoSize;	// 280 = 0x118
    int _bitrate;	// 296 = 0x128
    int m_lastVBitrate;	// 300 = 0x12c
    int _fps;	// 304 = 0x130
    int _bpsCeiling;	// 308 = 0x134
    int _estimatedThroughput;	// 312 = 0x138
    _Bool _useInterfaceOrientation;	// 316 = 0x13c
    float _videoZoomFactor;	// 320 = 0x140
    int _audioChannelCount;	// 324 = 0x144
    float _audioSampleRate;	// 328 = 0x148
    float _audioBitRate;	// 332 = 0x14c
    float _micGain;	// 336 = 0x150
    long long _cameraState;	// 344 = 0x158
    long long _aspectMode;	// 352 = 0x160
    long long _rtmpSessionState;	// 360 = 0x168
    _Bool _orientationLocked;	// 368 = 0x170
    _Bool _torch;	// 369 = 0x171
    _Bool _useAdaptiveBitrate;	// 370 = 0x172
    _Bool _continuousAutofocus;	// 371 = 0x173
    _Bool _continuousExposure;	// 372 = 0x174
    struct CGPoint _focusPOI;	// 376 = 0x178
    struct CGPoint _exposurePOI;	// 392 = 0x188
    long long _filter;	// 408 = 0x198
    NSTimer *_timer;	// 416 = 0x1a0
    _Bool _stop;	// 424 = 0x1a8
    _Bool _inited;	// 425 = 0x1a9
    int _retryCount;	// 428 = 0x1ac
    id <VCSessionDelegate> _delegate;	// 432 = 0x1b0
    NSString *_rtmpURL;	// 440 = 0x1b8
}

@property(nonatomic) NSString *rtmpURL; // @synthesize rtmpURL=_rtmpURL;
@property(nonatomic) int retryCount; // @synthesize retryCount=_retryCount;
@property(nonatomic) _Bool inited; // @synthesize inited=_inited;
@property(nonatomic) _Bool stop; // @synthesize stop=_stop;
@property(nonatomic) id <VCSessionDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) long long filter; // @synthesize filter=_filter;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)setRoomInfo:(id)arg1 liveName:(id)arg2 ur:(id)arg3;
- (void)onNetworkError:(id)arg1;
- (id)applicationDocumentsDirectory;
- (void)addEncodersAndPacketizers;
- (void)setupGraph;
- (void)changeFilterValue:(float)arg1 Type:(int)arg2;
- (void)getCameraPreviewLayer:(id *)arg1;
- (void)endRtmpSessionInternal;
- (void)endRtmpSession;
- (void)startSessionInternal:(id)arg1;
- (void)rtmpRetry;
- (void)timeout;
- (void)startRtmpSessionWithURL:(id)arg1;
- (void)dealloc;
- (id)initInternalWithVideoSize:(struct CGSize)arg1 frameRate:(int)arg2 bitrate:(int)arg3 audioSampleRate:(float)arg4 audioBitRate:(float)arg5 useAdaptiveBitrate:(_Bool)arg6 useInterfaceOrientation:(_Bool)arg7 cameraState:(long long)arg8 aspectMode:(long long)arg9;
- (id)initWithOptions:(id)arg1;
@property(readonly, nonatomic) int estimatedThroughput; // @dynamic estimatedThroughput;
@property(nonatomic) _Bool useAdaptiveBitrate; // @dynamic useAdaptiveBitrate;
@property(nonatomic) struct CGPoint exposurePointOfInterest; // @dynamic exposurePointOfInterest;
@property(nonatomic) struct CGPoint focusPointOfInterest; // @dynamic focusPointOfInterest;
@property(nonatomic) _Bool continuousExposure; // @dynamic continuousExposure;
@property(nonatomic) _Bool continuousAutofocus; // @dynamic continuousAutofocus;
@property(readonly, nonatomic) UIView *previewView; // @dynamic previewView;
@property(nonatomic) float micGain; // @dynamic micGain;
@property(nonatomic) float audioBitRate; // @dynamic audioBitRate;
@property(nonatomic) float audioSampleRate; // @dynamic audioSampleRate;
@property(nonatomic) int audioChannelCount; // @dynamic audioChannelCount;
@property(nonatomic) float videoZoomFactor; // @dynamic videoZoomFactor;
@property(nonatomic) long long rtmpSessionState; // @dynamic rtmpSessionState;
@property(nonatomic) long long cameraState; // @dynamic cameraState;
@property(nonatomic) long long aspectMode; // @dynamic aspectMode;
@property(nonatomic) _Bool torch; // @dynamic torch;
@property(nonatomic) _Bool orientationLocked; // @dynamic orientationLocked;
@property(readonly, nonatomic) _Bool useInterfaceOrientation; // @dynamic useInterfaceOrientation;
@property(nonatomic) int fps; // @dynamic fps;
@property(nonatomic) int bitrate; // @dynamic bitrate;
@property(nonatomic) struct CGSize videoSize; // @dynamic videoSize;

@end

