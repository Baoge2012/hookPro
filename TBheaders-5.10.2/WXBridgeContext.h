//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSMutableArray, NSMutableDictionary, WXDebugLoggerBridge;
@protocol WXBridgeProtocol;

@interface WXBridgeContext : NSObject
{
    _Bool _debugJS;	// 8 = 0x8
    _Bool _frameworkLoadFinished;	// 9 = 0x9
    id <WXBridgeProtocol> _jsBridge;	// 16 = 0x10
    WXDebugLoggerBridge *_devToolSocketBridge;	// 24 = 0x18
    NSMutableDictionary *_sendQueue;	// 32 = 0x20
    NSMutableArray *_insStack;	// 40 = 0x28
    NSMutableArray *_methodQueue;	// 48 = 0x30
}

+ (void)_timeSince:(CDUnknownBlockType)arg1 endBlock:(CDUnknownBlockType)arg2;
@property(retain, nonatomic) NSMutableArray *methodQueue; // @synthesize methodQueue=_methodQueue;
@property(nonatomic) _Bool frameworkLoadFinished; // @synthesize frameworkLoadFinished=_frameworkLoadFinished;
@property(retain, nonatomic) NSMutableArray *insStack; // @synthesize insStack=_insStack;
@property(retain, nonatomic) NSMutableDictionary *sendQueue; // @synthesize sendQueue=_sendQueue;
@property(nonatomic) _Bool debugJS; // @synthesize debugJS=_debugJS;
@property(retain, nonatomic) WXDebugLoggerBridge *devToolSocketBridge; // @synthesize devToolSocketBridge=_devToolSocketBridge;
@property(retain, nonatomic) id <WXBridgeProtocol> jsBridge; // @synthesize jsBridge=_jsBridge;
- (void).cxx_destruct;
- (void)_sendQueueLoop;
- (id)_methodWithCallback:(id)arg1;
- (void)logToWebSocket:(id)arg1 message:(id)arg2;
- (void)connectToWebSocket:(id)arg1;
- (void)connectToDevToolWithUrl:(id)arg1;
- (void)resetEnvironment;
- (void)callJSMethod:(id)arg1 args:(id)arg2;
- (void)registerComponents:(id)arg1;
- (void)registerModules:(id)arg1;
- (void)executeJsMethod:(id)arg1;
- (void)executeJsFramework:(id)arg1;
- (void)updateState:(id)arg1 data:(id)arg2;
- (void)refreshInstance:(id)arg1 data:(id)arg2;
- (void)destroyInstance:(id)arg1;
- (void)createInstance:(id)arg1 template:(id)arg2 options:(id)arg3 data:(id)arg4;
- (long long)invokeNative:(id)arg1 tasks:(id)arg2 callback:(id)arg3;
- (void)jsError:(id)arg1;
- (void)dealloc;
- (id)init;

@end

