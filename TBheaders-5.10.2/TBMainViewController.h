//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "TBTabController.h"

#import "ETFirstAlertDelegate-Protocol.h"
#import "TBMainVCInstanceProtocol-Protocol.h"
#import "UITabBarControllerDelegate-Protocol.h"

@class ETFirstInAlertViewController, NSArray, NSDictionary, NSString, UIColor;

@interface TBMainViewController : TBTabController <UITabBarControllerDelegate, ETFirstAlertDelegate, TBMainVCInstanceProtocol>
{
    _Bool _isViewAppeared;	// 8 = 0x8
    _Bool _isFromTaoMenu;	// 9 = 0x9
    NSArray *_VCItems;	// 16 = 0x10
    NSArray *_naviVCs;	// 24 = 0x18
    ETFirstInAlertViewController *_firsrInAlertViewController;	// 32 = 0x20
    id _memoryMonitor;	// 40 = 0x28
    UIColor *_festivalTabbarSelectedTextColor;	// 48 = 0x30
    UIColor *_festivalTabbarNormalTextColor;	// 56 = 0x38
    UIColor *_festivalTabbarBlurTintColor;	// 64 = 0x40
    UIColor *_festivalTabbarSeparatorColor;	// 72 = 0x48
    NSDictionary *_festivalTabbarIconfontMap;	// 80 = 0x50
    NSDictionary *_festivalTabbarImageMap;	// 88 = 0x58
}

@property(retain) NSDictionary *festivalTabbarImageMap; // @synthesize festivalTabbarImageMap=_festivalTabbarImageMap;
@property(retain) NSDictionary *festivalTabbarIconfontMap; // @synthesize festivalTabbarIconfontMap=_festivalTabbarIconfontMap;
@property(retain) UIColor *festivalTabbarSeparatorColor; // @synthesize festivalTabbarSeparatorColor=_festivalTabbarSeparatorColor;
@property(retain) UIColor *festivalTabbarBlurTintColor; // @synthesize festivalTabbarBlurTintColor=_festivalTabbarBlurTintColor;
@property(retain) UIColor *festivalTabbarNormalTextColor; // @synthesize festivalTabbarNormalTextColor=_festivalTabbarNormalTextColor;
@property(retain) UIColor *festivalTabbarSelectedTextColor; // @synthesize festivalTabbarSelectedTextColor=_festivalTabbarSelectedTextColor;
@property(retain, nonatomic) id memoryMonitor; // @synthesize memoryMonitor=_memoryMonitor;
@property(retain, nonatomic) ETFirstInAlertViewController *firsrInAlertViewController; // @synthesize firsrInAlertViewController=_firsrInAlertViewController;
@property(retain, nonatomic) NSArray *naviVCs; // @synthesize naviVCs=_naviVCs;
@property(retain, nonatomic) NSArray *VCItems; // @synthesize VCItems=_VCItems;
@property(nonatomic) _Bool isFromTaoMenu; // @synthesize isFromTaoMenu=_isFromTaoMenu;
@property _Bool isViewAppeared; // @synthesize isViewAppeared=_isViewAppeared;
- (void).cxx_destruct;
- (_Bool)throwBananeToMonkey:(id)arg1;
- (void)finishedDispalyFirstInAlert;
- (void)handleHTaoCountrySelectNotification:(id)arg1;
- (void)updateTabbarBadgeNotification:(id)arg1;
- (void)fromTaoMenu;
- (_Bool)tabBarController:(id)arg1 shouldSelectViewController:(id)arg2;
- (id)fixedTBDocumentPath;
- (_Bool)showImageGuideView;
- (void)downBootFigureImage;
- (void)newBootFigureImageFolder;
- (id)checkNotDownBootFigureImage;
- (id)allBootFigureURL;
- (void)setTabbarBadgeWithTag:(long long)arg1 badgeCount:(long long)arg2 type:(long long)arg3;
- (void)showBadgeWhenFirstLaunched;
- (id)fakeInitVCWithURL:(id)arg1;
- (void)degradeViewControllerWithIndex:(long long)arg1;
- (void)postMainVCLaunchFinishNotificationOnce;
- (void)updateLazyCreateViewControllers;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)mainViewDidLoad;
- (void)dealloc;
- (id)initWithViewControllerItems:(id)arg1;
- (id)viewControllerWithVCItem:(id)arg1 shouldLazyLoading:(_Bool)arg2;
- (id)tabBizViewControllerWithVCItem:(id)arg1;
- (id)tabBarItemWithVCItem:(id)arg1;
- (void)handleFestivalChanged:(id)arg1;
- (void)configTabbarFestivalStyle;
- (id)festivalTabbarSelectedImageWithIndex:(long long)arg1;
- (id)festivalTabbarNormalImageWithIndex:(long long)arg1;
- (id)festivalSelectedIconfontNameWithTag:(long long)arg1;
- (id)festivalNoramlIconfontNameWithTag:(long long)arg1;
- (void)loadFestivalTabbarIconfontMap;
- (void)loadFestivalTabbarImageMap;
- (void)resetTabbarItems;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

